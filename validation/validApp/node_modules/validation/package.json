{
  "author": {
    "name": "Ritchie Martori",
    "email": "ritchie@deployd.com",
    "url": "deployd.com"
  },
  "name": "validation",
  "description": "simple validation functions",
  "version": "0.0.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/ritch/validation.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "# validation\n\nSimple validation lib for checking types.\n\n## install\n\nnpm install validation\n\n## usage\n\n### validation.isType(value, type)\n\nChecks for a valid value of the given type.\n\n    validation.isType(new Date(), 'date')         // true\n    validation.isType([1,2,3], 'array')           // true\n    validation.isType({}, 'object')               // true\n    validation.isType('foobar', 'string')         // true\n  \nOpinionated to make input validation simple. For example `new Date(Infinity)` is a date, but an invalid type of date.\nAlso `NaN` is not a 'number' even though `typeof NaN === 'number'`.\n  \n    validation.isType(new Date(Infinity), 'date') // false\n    validation.isType({length: 7}, 'array')       // false\n    validation.isType(NaN, 'number')              // false\n    validation.isType('123', 'number')            // false\n    \nSee tests for more examples.\n\n### validation.exists(value)\n\nChecks if a value exists.\n\n    validation.exists('foobar')                   // true\n    validation.exists(function() {})              // true\n    validation.exists(0)                          // true\n    validation.exists(-1)                         // true\n    validation.exists(null)                       // false\n    validation.exists(undefined)                  // false\n    validation.exists(NaN)                        // false\n\n## license\n\nCopyright (C) 2012 Ritchie Martori\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/ritch/validation/issues"
  },
  "_id": "validation@0.0.1",
  "dist": {
    "shasum": "caaf39a9223018c2cd07852f112adb3d12ad29d2"
  },
  "_from": "validation@",
  "_resolved": "https://registry.npmjs.org/validation/-/validation-0.0.1.tgz"
}
